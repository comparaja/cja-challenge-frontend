{"remainingRequest":"/home/digasmc/Documents/Vue/cja-challenge/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/digasmc/Documents/Vue/cja-challenge/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/digasmc/Documents/Vue/cja-challenge/src/App.vue","mtime":1634032056778},{"path":"/home/digasmc/Documents/Vue/cja-challenge/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/digasmc/Documents/Vue/cja-challenge/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/digasmc/Documents/Vue/cja-challenge/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/digasmc/Documents/Vue/cja-challenge/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBOYXZiYXIgZnJvbSAnLi9jb21wb25lbnRzL05hdmJhci52dWUnCmltcG9ydCBGaWx0ZXJzIGZyb20gJy4vY29tcG9uZW50cy9GaWx0ZXJzLnZ1ZScKaW1wb3J0IFJlc3VsdCBmcm9tICcuL2NvbXBvbmVudHMvUmVzdWx0LnZ1ZScKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQXBwJywKICBjb21wb25lbnRzOiB7CiAgICBOYXZiYXIsCiAgICBGaWx0ZXJzLAogICAgUmVzdWx0CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcmVzdWx0czogW10sCiAgICAgIHByb3ZpZGVyczogW10sCiAgICAgIGNvbm5lY3Rpb25UeXBlczogW10sCiAgICAgIGZpbHRlcjogewogICAgICAgIHByb3ZpZGVyOiAnJywKICAgICAgICBjb25uZWN0aW9uVHlwZTogJycsCiAgICAgICAgY2hhbm5lbHM6ICIzMCIsCiAgICAgICAgaW50ZXJuZXRTcGVlZDogIjIwMCIsCiAgICAgICAgcHJpY2U6ICI0MCIsCiAgICAgICAgc29ydEJ5OiAnbW9udGhseVByaWNlJwogICAgICB9CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgZmlsdGVyOiB7CiAgICAgIGRlZXA6IHRydWUsCiAgICAgIGhhbmRsZXIodmFsKSB7CiAgICAgICAgdGhpcy5nZXRSZXN1bHRzKCkKICAgICAgfQogICAgfQogIH0sCiAgYXN5bmMgbW91bnRlZCgpIHsKICAgIGF3YWl0IHRoaXMuZmV0Y2hQcm92aWRlcnMoKQogICAgYXdhaXQgdGhpcy5mZXRjaENvbm5lY3Rpb25UeXBlcygpCiAgICB0aGlzLmdldFJlc3VsdHMoKQogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgZ2V0UmVzdWx0cygpIHsKICAgICAgdGhpcy5yZXN1bHRzID0gW10KICAgICAgbGV0IHJlcXVlc3QgPSAnP2lzQWN0aXZlPXRydWUnCgogICAgICBpZih0aGlzLmZpbHRlci5wcm92aWRlcikgewogICAgICAgIHJlcXVlc3QgKz0gIiZwcm92aWRlcklkPSIgKyB0aGlzLmZpbHRlci5wcm92aWRlcgogICAgICB9CgogICAgICBpZih0aGlzLmZpbHRlci5jb25uZWN0aW9uVHlwZSkgewogICAgICAgIHJlcXVlc3QgKz0gIiZjb25uZWN0aW9uVHlwZUlkPSIgKyBOdW1iZXIodGhpcy5maWx0ZXIuY29ubmVjdGlvblR5cGUpCiAgICAgIH0KCiAgICAgIGlmKHRoaXMuZmlsdGVyLnNvcnRCeSkgewogICAgICAgIGxldCBkaXIgPSAnYXNjJwogICAgICAgIGlmKHRoaXMuZmlsdGVyLnNvcnRCeSAhPSAnbW9udGhseVByaWNlJykgewogICAgICAgICAgZGlyID0gJ2Rlc2MnCiAgICAgICAgfQogICAgICAgIHJlcXVlc3QgKz0gIiZzb3J0Qnk9IiArIHRoaXMuZmlsdGVyLnNvcnRCeSArICImc29ydERpcmVjdGlvbj0iICsgZGlyCiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmVxdWVzdCArPSAiJnNvcnRCeT1tb250aGx5UHJpY2Umc29ydERpcmVjdGlvbj1hc2MiCiAgICAgICAgdGhpcy5maWx0ZXIuc29ydEJ5ID0gIm1vbnRobHlQcmljZSIKICAgICAgfQoKICAgICAgYXdhaXQgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9hcGkvdjEvcHJvZHVjdHMvbGlzdCcgKyByZXF1ZXN0LCB7CiAgICAgICAgaXNBY3RpdmU6IHRydWUsCiAgICAgICAgcHJvdmlkZXJJZDogdGhpcy5maWx0ZXIucHJvdmlkZXIsCiAgICAgICAgY29ubmVjdGlvblR5cGVJZDogdGhpcy5maWx0ZXIuY29ubmVjdGlvblR5cGUKICAgICAgfSkudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKQogICAgICAgICAgfSkudGhlbigoZGF0YSkgPT4gewogICAgICAgICAgICBkYXRhLmZvckVhY2goKGVsKSA9PiB7CiAgICAgICAgICAgIHRoaXMucmVzdWx0cy5wdXNoKHsKICAgICAgICAgICAgICBpZDogZWwuaWQsCiAgICAgICAgICAgICAgbnVtYmVyT2ZDaGFubmVsczogZWwubnVtYmVyT2ZDaGFubmVscywKICAgICAgICAgICAgICBtb250aGx5UHJpY2U6IGVsLm1vbnRobHlQcmljZSwKICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogZWwuZGVzY3JpcHRpb24sCiAgICAgICAgICAgICAgaW50ZXJuZXRTcGVlZDogZWwuaW50ZXJuZXRTcGVlZCwKICAgICAgICAgICAgICBwcm92aWRlcjogdGhpcy5wcm92aWRlcnMuZmlsdGVyKGl0ID0+IHsKICAgICAgICAgICAgICAgIHJldHVybiBpdC5pZCA9PSBlbC5wcm92aWRlcklkCiAgICAgICAgICAgICAgfSlbMF0ubmFtZSwKICAgICAgICAgICAgICBjb25uZWN0aW9uVHlwZTogdGhpcy5jb25uZWN0aW9uVHlwZXMuZmlsdGVyKGl0ID0+IHsKICAgICAgICAgICAgICAgIHJldHVybiBpdC5pZCA9PSBlbC5jb25uZWN0aW9uVHlwZUlkCiAgICAgICAgICAgICAgfSlbMF0uZGVzY3JpcHRpb24sCiAgICAgICAgICAgIH0pCiAgICAgICAgICB9KQogICAgICAgICAgfSkKICAgIH0sCiAgICBhc3luYyBmZXRjaFByb3ZpZGVycygpIHsKICAgICAgYXdhaXQgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9hcGkvdjEvcHJvdmlkZXIvbGlzdD9pc0FjdGl2ZT10cnVlJykudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCkKICAgICAgICB9KS50aGVuKChkYXRhKSA9PiB7CiAgICAgICAgICB0aGlzLnByb3ZpZGVycyA9IGRhdGEKICAgICAgICB9KQogICAgfSwKICAgIGFzeW5jIGZldGNoQ29ubmVjdGlvblR5cGVzKCkgewogICAgICBhd2FpdCBmZXRjaCgnaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9jb25uZWN0aW9uVHlwZS9saXN0P2lzQWN0aXZlPXRydWUnKS50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKQogICAgICAgIH0pLnRoZW4oKGRhdGEpID0+IHsKICAgICAgICAgIHRoaXMuY29ubmVjdGlvblR5cGVzID0gZGF0YQogICAgICAgIH0pCiAgICB9LAogIH0KfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <Navbar></Navbar>\n    <div class=\"banner\">\n      <h1>Resultados TV-Net-Voz</h1>\n      <p>Encontr√°mos {{ results.length }} resultado{{ results.length != 1 ? 's' : ''}} indicados para si.</p>\n    </div>\n    <Filters v-model=\"filter\" :providers=\"providers\" :connectionTypes=\"connectionTypes\" ></Filters>\n    <div class=\"results\">\n      <Result v-for=\"result in results\" :key=\"result.id\" :result=\"result\"></Result>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Navbar from './components/Navbar.vue'\nimport Filters from './components/Filters.vue'\nimport Result from './components/Result.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    Navbar,\n    Filters,\n    Result\n  },\n  data() {\n    return {\n      results: [],\n      providers: [],\n      connectionTypes: [],\n      filter: {\n        provider: '',\n        connectionType: '',\n        channels: \"30\",\n        internetSpeed: \"200\",\n        price: \"40\",\n        sortBy: 'monthlyPrice'\n      }\n    }\n  },\n  watch: {\n    filter: {\n      deep: true,\n      handler(val) {\n        this.getResults()\n      }\n    }\n  },\n  async mounted() {\n    await this.fetchProviders()\n    await this.fetchConnectionTypes()\n    this.getResults()\n  },\n  methods: {\n    async getResults() {\n      this.results = []\n      let request = '?isActive=true'\n\n      if(this.filter.provider) {\n        request += \"&providerId=\" + this.filter.provider\n      }\n\n      if(this.filter.connectionType) {\n        request += \"&connectionTypeId=\" + Number(this.filter.connectionType)\n      }\n\n      if(this.filter.sortBy) {\n        let dir = 'asc'\n        if(this.filter.sortBy != 'monthlyPrice') {\n          dir = 'desc'\n        }\n        request += \"&sortBy=\" + this.filter.sortBy + \"&sortDirection=\" + dir\n      } else {\n        request += \"&sortBy=monthlyPrice&sortDirection=asc\"\n        this.filter.sortBy = \"monthlyPrice\"\n      }\n\n      await fetch('http://localhost:8080/api/v1/products/list' + request, {\n        isActive: true,\n        providerId: this.filter.provider,\n        connectionTypeId: this.filter.connectionType\n      }).then((response) => {\n            return response.json()\n          }).then((data) => {\n            data.forEach((el) => {\n            this.results.push({\n              id: el.id,\n              numberOfChannels: el.numberOfChannels,\n              monthlyPrice: el.monthlyPrice,\n              description: el.description,\n              internetSpeed: el.internetSpeed,\n              provider: this.providers.filter(it => {\n                return it.id == el.providerId\n              })[0].name,\n              connectionType: this.connectionTypes.filter(it => {\n                return it.id == el.connectionTypeId\n              })[0].description,\n            })\n          })\n          })\n    },\n    async fetchProviders() {\n      await fetch('http://localhost:8080/api/v1/provider/list?isActive=true').then((response) => {\n          return response.json()\n        }).then((data) => {\n          this.providers = data\n        })\n    },\n    async fetchConnectionTypes() {\n      await fetch('http://localhost:8080/api/v1/connectionType/list?isActive=true').then((response) => {\n          return response.json()\n        }).then((data) => {\n          this.connectionTypes = data\n        })\n    },\n  }\n}\n</script>\n\n<style>\n@import './assets/colors.css';\n\nhtml {\n  background-color: var(--white3);\n}\n\nbody {\n  margin: 0;\n}\n\n#app {\n  font-family: Montserrat, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: var(--grey2);\n}\n\n.banner {\n  background-color: var(--blue1);\n  color: var(--white);\n  padding: 20px calc((100vw - 1020px) / 2);\n}\n\n.results {\n  padding: 20px calc((100vw - 1020px) / 2);\n}\n\n.results > * {\n  margin-bottom: 20px;\n}\n\n\n@media ( max-width: 1200px) {\n  .banner, .results {\n    padding: 20px;\n  }\n}\n</style>\n"]}]}